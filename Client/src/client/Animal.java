/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import java.awt.event.*;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;

/**
 *
 * @author Sanele
 */
public class Animal extends javax.swing.JPanel {

    /**
     * Creates new form Animal
     */
    public Animal() {
        initComponents();
        taDescription.setWrapStyleWord(true);
        taDescription.setLineWrap(true);

        cboSpecies.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                strSelectedSpecies = cboSpecies.getSelectedItem().toString();
            }
        } );
    }
    
    public void populate(ActionEvent e) {
        if(cboSpecies.getItemCount() != 0) {
                cboSpecies = new JComboBox<>(new String[]{});
            }
            String[] arrSpecies = Client.currentInstance().contactServer(
                new String[]{"SELECT SpeciesName FROM Species", "Get Field"});
    
            for(String str : arrSpecies) {
                cboSpecies.addItem(str);
            }
    }
    

    private int intAnimalID;
    private int intSpeciesID;
    private String strSelectedSpecies;
    
    private String validateInput() {
        if(txtAnimalName.getText().equals("")) {
            return "Animal name must cannot be null";
            
        } else if(!txtAnimalName.getText().equals("")) {
            return new Species().validateName(txtAnimalName.getText());
            
        } else if(taDescription.getText().equals("")) {
            return "Enter animal description";   
        }
        return "";
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAnimals = new javax.swing.JLabel();
        lblAnimalName = new javax.swing.JLabel();
        txtAnimalName = new javax.swing.JTextField();
        lblDescription = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taDescription = new javax.swing.JTextArea();
        lblSpecies = new javax.swing.JLabel();
        cboSpecies = new javax.swing.JComboBox<>();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        lblAnimals.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblAnimals.setText("Animals");

        lblAnimalName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblAnimalName.setText("Animal Name");

        lblDescription.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblDescription.setText("Description");

        taDescription.setColumns(20);
        taDescription.setRows(5);
        jScrollPane1.setViewportView(taDescription);

        lblSpecies.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblSpecies.setText("Species");

        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClose.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAnimalName)
                            .addComponent(lblDescription)
                            .addComponent(lblSpecies))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(txtAnimalName)
                            .addComponent(cboSpecies, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40))
            .addGroup(layout.createSequentialGroup()
                .addGap(185, 185, 185)
                .addComponent(lblAnimals)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAnimals)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAnimalName)
                    .addComponent(txtAnimalName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDescription)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSpecies)
                    .addComponent(cboSpecies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnClose)
                    .addComponent(btnUpdate)
                    .addComponent(btnAdd))
                .addGap(62, 62, 62))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if(validateInput().equals("")) {
            
            if(Client.currentInstance().contactServer(new String[]{"SELECT * FROM Animals WHERE AnimalName ='"+
                    txtAnimalName.getText().trim()+"'", "Check"})[0].equals("true")) { // Check if animal is already added
                
                JOptionPane.showMessageDialog(this, "The animal name exists in the database", "WARNING", JOptionPane.WARNING_MESSAGE);
                txtAnimalName.requestFocusInWindow();
                
            } else {
                if(strSelectedSpecies != null) {
                    int intSpecies = Integer.parseInt(Client.currentInstance().contactServer(
                        new String[]{"SELECT SpeciesID FROM Species WHERE SpeciesName ='"+
                                strSelectedSpecies+"'", "Get Field"})[0]);
                
                    // Send data to the server to add animal and check if the output
                    // recieved from the server confirms the animal is added
                    if(Client.currentInstance().contactServer(new String[]{"INSERT INTO Animals ("
                        + "AnimalName, Description, SpeciesID)VALUES('"+
                        txtAnimalName.getText().trim()+"', '"+taDescription.getText().trim()
                        +"', '"+intSpecies+"')", "Execute"})[0].equals("true")) { 
                    
                        JOptionPane.showMessageDialog(this, "Animal added.", "MESSAGE", JOptionPane.INFORMATION_MESSAGE);
                    } 
                } else {
                    JOptionPane.showMessageDialog(this, "Select species", "WARNING", JOptionPane.WARNING_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, validateInput(), 
                    "WARNING", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if(btnUpdate.getText().equals("Update")) {
            
            new ChooseRecord("SELECT AnimalName FROM Animals").setVisible(true);
            
            if(ChooseRecord.getOption() != null) {
                String[] arrAnimalDetails = Client.currentInstance().contactServer(
                    new String[]{"SELECT AnimalID, AnimalName, Description, SpeciesID FROM Animals WHERE "
                            + "AnimalName ='"+ChooseRecord.getOption()+"'", "Row"});
            
                intAnimalID = Integer.parseInt(arrAnimalDetails[0]);
                txtAnimalName.setText(arrAnimalDetails[1]);
                taDescription.setText(arrAnimalDetails[2]);
                cboSpecies.setSelectedItem(Client.currentInstance().contactServer(
                        new String[]{"SELECT SpeciesName FROM Species WHERE SpeciesID ='"+
                        arrAnimalDetails[3]+"'", "Get Field"})[0]);
                
                btnUpdate.setText("Save..");
            }
            
        } else if(btnUpdate.getText().equals("Save..")) {
            if(validateInput().equals("")) {
                // Checks if species is already in the database and it is not the same as the value that was initially
                // extracted from the database
                if(Client.currentInstance().contactServer(new String[]{"SELECT * FROM Animals WHERE AnimalName ='"+
                        txtAnimalName.getText().trim()+"' AND AnimalID <> "+intAnimalID, "Check"})[0].equals("true")) { 
                
                    JOptionPane.showMessageDialog(this, "The animal exist in the database", "WARNING", JOptionPane.WARNING_MESSAGE);
                    txtAnimalName.requestFocusInWindow();
                    btnUpdate.setText("Update");
                
                } else {
                    if(strSelectedSpecies != null) {
                        intSpeciesID = Integer.parseInt(Client.currentInstance().contactServer(
                        new String[]{"SELECT SpeciesID FROM Species WHERE SpeciesName ='"+
                        strSelectedSpecies+"'", "Get Field"})[0]);
                        
                        if(Client.currentInstance().contactServer(
                            new String[]{"UPDATE Animals SET AnimalName ='"+
                                txtAnimalName.getText().trim()+"', Description ='"+
                                taDescription.getText().trim()+"', SpeciesID ="+intSpeciesID+
                                " WHERE AnimalID ="+ intAnimalID, "Execute"})[0].equals("true")) {
                
                            JOptionPane.showMessageDialog(this, "Update successful", "MESSAGE", JOptionPane.INFORMATION_MESSAGE);
                            btnUpdate.setText("Update");
                        }
                    }
                    
                }
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        new ChooseRecord("SELECT AnimalName FROM Animals").setVisible(true);
        if(ChooseRecord.getOption() != null) {
            if(JOptionPane.showConfirmDialog(this, "Do you want to delete the animal "+
                    ChooseRecord.getOption() +" ?", "Delete Animal?",
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            
                if(Client.currentInstance().contactServer(
                    new String[]{"DELETE FROM Animals WHERE "
                        + "AnimalName ='"+ChooseRecord.getOption()+"'",
                        "Execute"})[0].equals("true")) {
            
                    JOptionPane.showMessageDialog(this, "Animal deleted!", "MESSAGE", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        txtAnimalName.setText("");
        taDescription.setText("");
        cboSpecies = new JComboBox<>(new String[]{});
        this.getTopLevelAncestor().setVisible(false);
    }//GEN-LAST:event_btnCloseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cboSpecies;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAnimalName;
    private javax.swing.JLabel lblAnimals;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblSpecies;
    private javax.swing.JTextArea taDescription;
    private javax.swing.JTextField txtAnimalName;
    // End of variables declaration//GEN-END:variables
}
