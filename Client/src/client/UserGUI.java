/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sanele
 */
public class UserGUI extends javax.swing.JPanel {

    /**
     * Creates new form UserGUI
     */
    public UserGUI() {
        initComponents();
        
    }

    private final DefaultTableModel dmModel = new DefaultTableModel();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblKingdomAnimalia = new javax.swing.JLabel();
        lblSearch = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnViewAllAnimals = new javax.swing.JButton();
        btnViewSpecies = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        lblKingdomAnimalia.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblKingdomAnimalia.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblKingdomAnimalia.setText("Kingdom Animalia");

        lblSearch.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblSearch.setText("Search");

        btnSearch.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnViewAllAnimals.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnViewAllAnimals.setText("View Animals");
        btnViewAllAnimals.setToolTipText("");
        btnViewAllAnimals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewAllAnimalsActionPerformed(evt);
            }
        });

        btnViewSpecies.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnViewSpecies.setText("View Species");
        btnViewSpecies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewSpeciesActionPerformed(evt);
            }
        });

        tblTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(292, 292, 292)
                .addComponent(lblKingdomAnimalia)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSearch)
                        .addGap(27, 27, 27)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch)
                        .addGap(98, 98, 98)
                        .addComponent(btnViewAllAnimals)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                        .addComponent(btnViewSpecies)))
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblKingdomAnimalia)
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSearch)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch)
                    .addComponent(btnViewAllAnimals)
                    .addComponent(btnViewSpecies))
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        
        if(Client.currentInstance().contactServer(new String[]{
            "SELECT * FROM Species WHERE SpeciesName LIKE '%"+
                    txtSearch.getText().trim()+"%'", "Check"})[0].equals("true")) {
            
            dmModel.setRowCount(0);
            
            String[] arrSpecies = Client.currentInstance().contactServer(new String[]{
                "SELECT SpeciesID FROM Species WHERE SpeciesName LIKE '%"+
                        txtSearch.getText().trim()+"%'", "Get Field"});
            
            for(String id : arrSpecies) {
                dmModel.addRow(Client.currentInstance().contactServer(new String[]{
                    "SELECT AnimalName, Description FROM Animals WHERE SpeciesID ="+id, "Row"}));
            }
            
            
        } else if(Client.currentInstance().contactServer(new String[]{
            "SELECT * FROM Animals WHERE AnimalName LIKE '%"+
                    txtSearch.getText().trim()+"%'", "Check"})[0].equals("true")) {
            
            dmModel.setRowCount(0);
            
            String[] arrAnimals = Client.currentInstance().contactServer(new String[]{
            "SELECT AnimalID FROM Animals WHERE AnimalName LIKE '%"+
                        txtSearch.getText().trim()+"%'", "Get Field"});
            
            for(String id : arrAnimals) {
                dmModel.addRow(Client.currentInstance().contactServer(new String[]{
                    "SELECT AnimalName, Description FROM Animals WHERE AnimalID ="+id, "Row"}));
            }
            
        } else {
            JOptionPane.showMessageDialog(this, "Our data sources do not have such animal or species of animals", 
                    "MESSAGE", JOptionPane.INFORMATION_MESSAGE);
            txtSearch.requestFocusInWindow();
        }
        
        tblTable.setModel(dmModel);
        dmModel.setColumnIdentifiers(new String[]{"Animal", "Description"});
        tblTable.validate();
        
        JOptionPane.showMessageDialog(this, "This is a list of animals with names\n or"
                + " species name(s) that contain the term '"+txtSearch.getText()+"'",
                "MESSAGE", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnViewAllAnimalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewAllAnimalsActionPerformed
        String[] arrAnimals = Client.currentInstance().contactServer(new String[]{
            "SELECT AnimalID FROM Animals", "Get Field"});
        
        tblTable.setModel(dmModel);
        dmModel.setColumnIdentifiers(new String[]{"Animal", "Description"});
        
        dmModel.setRowCount(0);
            
        for(String id : arrAnimals) {
            dmModel.addRow(Client.currentInstance().contactServer(new String[]{
            "SELECT AnimalName, Description FROM Animals WHERE AnimalID ="+id, "Row"}));
        }
        tblTable.validate();
    }//GEN-LAST:event_btnViewAllAnimalsActionPerformed

    private void btnViewSpeciesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewSpeciesActionPerformed
        String[] arrAnimals = Client.currentInstance().contactServer(new String[]{
            "SELECT SpeciesID FROM Species", "Get Field"});
        
        tblTable.setModel(dmModel);
        dmModel.setColumnIdentifiers(new String[]{"Species"});
        
        dmModel.setRowCount(0);
        for(String id : arrAnimals) {
            dmModel.addRow(Client.currentInstance().contactServer(new String[]{
            "SELECT SpeciesName FROM Species WHERE SpeciesID ="+id, "Row"}));
        }
    
        tblTable.validate();
    }//GEN-LAST:event_btnViewSpeciesActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnViewAllAnimals;
    private javax.swing.JButton btnViewSpecies;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblKingdomAnimalia;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JTable tblTable;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
